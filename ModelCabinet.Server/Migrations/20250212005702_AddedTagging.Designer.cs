// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModelCabinet.Server.Data;

#nullable disable

namespace ModelCabinet.Server.Migrations
{
    [DbContext(typeof(ModelCabinetContext))]
    [Migration("20250212005702_AddedTagging")]
    partial class AddedTagging
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ModelCabinet.Server.Models.Asset", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateUpdated")
                        .HasColumnType("datetime2");

                    b.Property<long>("FileSize")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.HasKey("AssetId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Asset");

                    b.HasData(
                        new
                        {
                            AssetId = 1,
                            DateCreation = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileSize = 446684L,
                            Name = "Test Asset",
                            Path = "C:\\Projects\\Large_Projects\\ModelCabinet-Fork\\ModelCabinet.Server\\bin\\Debug\\net8.0\\Assets\\TestProject\\HelloWorld.stl",
                            ProjectId = 1
                        },
                        new
                        {
                            AssetId = 2,
                            DateCreation = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DateUpdated = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FileSize = 11285384L,
                            Name = "Benchy",
                            Path = "C:\\Projects\\Large_Projects\\ModelCabinet-Fork\\ModelCabinet.Server\\bin\\Debug\\net8.0\\Assets\\TestProject\\3DBenchy.stl",
                            ProjectId = 1
                        });
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.AssetTag", b =>
                {
                    b.Property<int>("AssetId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("AssetId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("AssetTag");

                    b.HasData(
                        new
                        {
                            AssetId = 2,
                            TagId = 1
                        },
                        new
                        {
                            AssetId = 1,
                            TagId = 6
                        });
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            Author = "Author",
                            CreationDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            ModifiedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Project",
                            ShortDescription = "Desc",
                            Slug = "nomen-est-omen",
                            Version = "0.0.1"
                        },
                        new
                        {
                            ProjectId = 2,
                            Author = "Author",
                            CreationDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Description",
                            ModifiedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Test Project Two",
                            ShortDescription = "Desc",
                            Slug = "nomen-est-bonum",
                            Version = "0.0.1"
                        });
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.ProjectTag", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("ProjectId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ProjectTag");

                    b.HasData(
                        new
                        {
                            ProjectId = 1,
                            TagId = 3
                        },
                        new
                        {
                            ProjectId = 1,
                            TagId = 4
                        },
                        new
                        {
                            ProjectId = 1,
                            TagId = 5
                        },
                        new
                        {
                            ProjectId = 2,
                            TagId = 1
                        },
                        new
                        {
                            ProjectId = 2,
                            TagId = 2
                        },
                        new
                        {
                            ProjectId = 2,
                            TagId = 5
                        });
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.Tag", b =>
                {
                    b.Property<int>("TagId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TagId"));

                    b.Property<string>("TagName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("TagId");

                    b.HasIndex("TagName")
                        .IsUnique();

                    b.ToTable("Tag");

                    b.HasData(
                        new
                        {
                            TagId = 1,
                            TagName = "Stress Test"
                        },
                        new
                        {
                            TagId = 2,
                            TagName = "D&D"
                        },
                        new
                        {
                            TagId = 3,
                            TagName = "Pathfinder"
                        },
                        new
                        {
                            TagId = 4,
                            TagName = "Low Detail"
                        },
                        new
                        {
                            TagId = 5,
                            TagName = "High Detail"
                        },
                        new
                        {
                            TagId = 6,
                            TagName = "Video Game"
                        });
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.Asset", b =>
                {
                    b.HasOne("ModelCabinet.Server.Models.Project", null)
                        .WithMany("Assets")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.AssetTag", b =>
                {
                    b.HasOne("ModelCabinet.Server.Models.Asset", "Asset")
                        .WithMany("AssetTags")
                        .HasForeignKey("AssetId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelCabinet.Server.Models.Tag", "Tag")
                        .WithMany("AssetTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asset");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.ProjectTag", b =>
                {
                    b.HasOne("ModelCabinet.Server.Models.Project", "Project")
                        .WithMany("ProjectTags")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelCabinet.Server.Models.Tag", "Tag")
                        .WithMany("ProjectTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.Asset", b =>
                {
                    b.Navigation("AssetTags");
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.Project", b =>
                {
                    b.Navigation("Assets");

                    b.Navigation("ProjectTags");
                });

            modelBuilder.Entity("ModelCabinet.Server.Models.Tag", b =>
                {
                    b.Navigation("AssetTags");

                    b.Navigation("ProjectTags");
                });
#pragma warning restore 612, 618
        }
    }
}
